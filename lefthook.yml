colors: true
skip_output: [meta, success]

#---------------------------------------------
# Pre-commit checks
#---------------------------------------------
pre-commit:
  parallel: true
  commands:
    lint:
      glob: '*.{js,jsx,ts,tsx,vue}'
      run: |
        echo "🔍 Linting code..."
        bun run lint
      skip: [merge, rebase]

    format:
      glob: '*.{js,jsx,ts,tsx,vue,json,md}'
      stage_fixed: true
      run: |
        echo "✨ Formatting code..."
        bun run format
      skip: [merge, rebase]

    typecheck:
      glob: '*.{ts,tsx,vue}'
      run: |
        echo "🔎 Type checking..."
        bun run type-check
      skip: [merge, rebase]

    no-debug:
      glob: '*.{js,jsx,ts,tsx,vue}'
      run: |
        echo "🐛 Checking for debug code..."
        if grep -l "console\.log\|debugger" {staged_files} 2>/dev/null; then
          echo "⚠️  Debug code detected in staged files!"
          echo "Found in:"
          grep -n "console\.log\|debugger" {staged_files} 2>/dev/null || true
          exit 1
        else
          echo "✅ No debug code found"
        fi
      skip: [merge, rebase]

#---------------------------------------------
# Commit message validation
#---------------------------------------------
commit-msg:
  commands:
    commitlint:
      run: |
        echo "📝 Validating commit message..."
        bunx --no-install commitlint --edit "$1"

#---------------------------------------------
# Branch operations
#---------------------------------------------
post-merge:
  commands:
    update-deps:
      run: |
        echo "📦 Checking dependencies..."
        if git diff --name-only ORIG_HEAD HEAD | grep -E 'bun\.lock|package\.json' >/dev/null 2>&1; then
          echo "📦 Dependencies changed, updating..."
          bun install
        else
          echo "✅ No dependency changes detected"
        fi

post-checkout:
  commands:
    setup:
      run: |
        echo "🔄 Branch checkout detected..."
        # $3 = "1" when switching branches, $1 = previous HEAD, $2 = new HEAD
        if [ "$3" = "1" ]; then
          if git diff --name-only "$1" "$2" | grep -E 'bun\.lock|package\.json' >/dev/null 2>&1; then
            echo "📦 Dependencies changed between branches, updating..."
            bun install
          else
            echo "✅ No dependency changes between branches"
          fi
        fi

#---------------------------------------------
# Push hooks (optional - for additional safety)
#---------------------------------------------
pre-push:
  commands:
    test:
      run: |
        echo "🧪 Running tests before push..."
        bun run test
      skip: [merge, rebase]

    build-check:
      run: |
        echo "🏗️  Verifying build..."
        bun run build
      skip: [merge, rebase]
